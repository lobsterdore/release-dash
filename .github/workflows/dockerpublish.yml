---

name: Docker

on:
  workflow_dispatch:
  push:
    branches:
      - main

env:
  APP_NAME: release-dash
  DOCKER_BUILD_TARGET: run
  DOCKER_DH_PASSWORD: "${{ secrets.DOCKER_DH_PASSWORD }}"
  DOCKER_DH_REPO_URL: docker.io
  DOCKER_DH_REPOSITORY: lobsterdore
  DOCKER_DH_USER: lobsterdore
  DOCKER_GH_PASSWORD: "${{ secrets.DOCKER_GH_PASSWORD }}"
  DOCKER_GH_REPO_URL: docker.pkg.github.com
  DOCKER_GH_REPOSITORY: lobsterdore/release-dash
  DOCKER_GH_USER: "${{ github.actor }}"

jobs:

  push:
    runs-on: ubuntu-latest

    steps:
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.15.x

      - name: Checkout out repo
        uses: actions/checkout@v2
        with:
          path: release-dash

      - name: Build image
        run: |
          cd $GITHUB_WORKSPACE/$APP_NAME
          make docker_build

      - name: Run tests
        run: |
          cd $GITHUB_WORKSPACE/$APP_NAME
          make test_all

      - name: Bump version and push tag
        uses: anothrNick/github-tag-action@1.33.0
        id: tag_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          RELEASE_BRANCHES: main
          SOURCE: release-dash
          WITH_V: true

      - name: Log into GH Packages registry
        run: docker login $DOCKER_GH_REPO_URL -u $DOCKER_GH_USER --password $DOCKER_GH_PASSWORD

      - name: Push image to GH Packages
        run: |
          IMAGE_ID=$DOCKER_GH_REPO_URL/$DOCKER_GH_REPOSITORY/$APP_NAME

          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')

          # Strip "v" prefix from tag name
          VERSION=$(echo ${{ steps.tag_release.outputs.new_tag }} | sed -e 's/^v//')

          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION

          docker tag $APP_NAME $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION

      - name: Log into Dockerhub registry
        run: docker login $DOCKER_DH_REPO_URL -u $DOCKER_DH_USER --password $DOCKER_DH_PASSWORD

      - name: Push image to Dockerhub
        run: |
          IMAGE_ID=$DOCKER_DH_REPO_URL/$DOCKER_DH_REPOSITORY/$APP_NAME

          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')

          # Strip "v" prefix from tag name
          VERSION=$(echo ${{ steps.tag_release.outputs.new_tag }} | sed -e 's/^v//')

          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION

          docker tag $APP_NAME $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION
